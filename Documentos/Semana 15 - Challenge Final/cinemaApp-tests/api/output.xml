<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-10-09T14:39:25.411495" rpa="false" schemaversion="5">
<suite id="s1" name="Auth Tests" source="/home/rafael/Compass/PB-Quality-Engineering/Documentos/Semana 15 - Challenge Final/cinemaApp-tests/api/tests/auth_tests.robot">
<kw name="Make New Session" owner="base" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-09T14:39:25.602610" level="INFO">Creating Session using : alias=CinemaApp, url=http://localhost:3000/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>CinemaApp</arg>
<arg>url=${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-09T14:39:25.602372" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2025-10-09T14:39:25.601667" elapsed="0.001833"/>
</kw>
<test id="s1-t1" name="CT001.004 - Cadastrar com um email já existente" line="50">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.604324" level="INFO">${customer_user} = {'name': 'Kurt Cobain', 'email': 'kurt@nirvana.com', 'password': 'pwd12345'}</msg>
<var>${customer_user}</var>
<arg>name=Kurt Cobain</arg>
<arg>email=kurt@nirvana.com</arg>
<arg>password=pwd12345</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-09T14:39:25.604082" elapsed="0.000678"/>
</kw>
<kw name="Clean user from database" owner="database">
<msg time="2025-10-09T14:39:25.607978" level="INFO">Removed user with email: kurt@nirvana.com</msg>
<arg>${customer_user}[email]</arg>
<status status="PASS" start="2025-10-09T14:39:25.605154" elapsed="0.003085"/>
</kw>
<kw name="Criar Cliente Valido" owner="CreateUserKeywords">
<kw name="POST Endpoint /auth/register" owner="CreateUserKeywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.609826" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-09T14:39:25.609627" elapsed="0.001125"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.611219" level="INFO">${payload} = {'name': 'Kurt Cobain', 'email': 'kurt@nirvana.com', 'password': 'pwd12345'}</msg>
<var>${payload}</var>
<arg>name=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-09T14:39:25.610945" elapsed="0.000354"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-09T14:39:25.671295" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"name": "Kurt Cobain", "email": "kurt@nirvana.com", "password": "pwd12345"}' 
 </msg>
<msg time="2025-10-09T14:39:25.671544" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '302', 'ETag': 'W/"12e-eGTTJNSrP9jkf8qiREnivdMvtIE"', 'Date': 'Thu, 09 Oct 2025 17:39:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"68e7f34d6f9321f1b5695d5b","name":"Kurt Cobain","email":"kurt@nirvana.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZTdmMzRkNmY5MzIxZjFiNTY5NWQ1YiIsImlhdCI6MTc2MDAzMTU2NSwiZXhwIjoxNzYwMTE3OTY1fQ.zA25bJ7_SKbTcIDVFav3Az6yVo8V4WV9KEhp-rSNNlA"}} 
 </msg>
<msg time="2025-10-09T14:39:25.671696" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>CinemaApp</arg>
<arg>url=/auth/register</arg>
<arg>json=${payload}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-09T14:39:25.611435" elapsed="0.060323"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.672162" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-09T14:39:25.671956" elapsed="0.000277"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.672724" level="INFO">{"success":true,"data":{"_id":"68e7f34d6f9321f1b5695d5b","name":"Kurt Cobain","email":"kurt@nirvana.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZTdmMzRkNmY5MzIxZjFiNTY5NWQ1YiIsImlhdCI6MTc2MDAzMTU2NSwiZXhwIjoxNzYwMTE3OTY1fQ.zA25bJ7_SKbTcIDVFav3Az6yVo8V4WV9KEhp-rSNNlA"}}</msg>
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-09T14:39:25.672382" elapsed="0.000425"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.673169" level="INFO">201</msg>
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-09T14:39:25.672921" elapsed="0.000348"/>
</kw>
<arg>${customer_user}[name]</arg>
<arg>${customer_user}[email]</arg>
<arg>${customer_user}[password]</arg>
<status status="PASS" start="2025-10-09T14:39:25.609290" elapsed="0.064061"/>
</kw>
<arg>${customer_user}</arg>
<status status="PASS" start="2025-10-09T14:39:25.608868" elapsed="0.064548"/>
</kw>
<kw name="Criar Cliente Valido" owner="CreateUserKeywords">
<kw name="POST Endpoint /auth/register" owner="CreateUserKeywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.676729" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-09T14:39:25.676472" elapsed="0.000389"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.677655" level="INFO">${payload} = {'name': 'Kurt Cobain', 'email': 'kurt@nirvana.com', 'password': 'pwd12345'}</msg>
<var>${payload}</var>
<arg>name=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-09T14:39:25.677200" elapsed="0.000589"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-09T14:39:25.682284" level="INFO">POST Request : url=http://localhost:3000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"name": "Kurt Cobain", "email": "kurt@nirvana.com", "password": "pwd12345"}' 
 </msg>
<msg time="2025-10-09T14:39:25.682506" level="INFO">POST Response : url=http://localhost:3000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc"', 'Date': 'Thu, 09 Oct 2025 17:39:25 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"User already exists"} 
 </msg>
<msg time="2025-10-09T14:39:25.682657" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>CinemaApp</arg>
<arg>url=/auth/register</arg>
<arg>json=${payload}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-09T14:39:25.678135" elapsed="0.004583"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.683349" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-09T14:39:25.683097" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.683945" level="INFO">{"success":false,"message":"User already exists"}</msg>
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-09T14:39:25.683625" elapsed="0.000407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.684555" level="INFO">400</msg>
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-09T14:39:25.684156" elapsed="0.000482"/>
</kw>
<arg>${customer_user}[name]</arg>
<arg>${customer_user}[email]</arg>
<arg>${customer_user}[password]</arg>
<status status="PASS" start="2025-10-09T14:39:25.675874" elapsed="0.008839"/>
</kw>
<arg>${customer_user}</arg>
<status status="PASS" start="2025-10-09T14:39:25.675285" elapsed="0.009491"/>
</kw>
<kw name="Validate Status Code &quot;400&quot;" owner="common" source_name="Validate Status Code &quot;${statuscode}&quot;">
<kw name="Variable Should Exist" owner="BuiltIn">
<arg>${response}</arg>
<arg>response não foi definida. Verifique a requisição</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" start="2025-10-09T14:39:25.686785" elapsed="0.000281"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-09T14:39:25.687229" elapsed="0.000541"/>
</kw>
<status status="PASS" start="2025-10-09T14:39:25.686398" elapsed="0.001460"/>
</kw>
<kw name="Validar Success" owner="common">
<kw name="Variable Should Exist" owner="BuiltIn">
<arg>${response}</arg>
<arg>response não foi definida. Verifique a requisição</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" start="2025-10-09T14:39:25.689104" elapsed="0.000175"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-09T14:39:25.689717" level="INFO">${response_success} = False</msg>
<var>${response_success}</var>
<arg>${response.json()['success']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-09T14:39:25.689405" elapsed="0.001400"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response_success}</arg>
<arg>${expected_success}</arg>
<arg>msg=Campo success inesperado. Esperado: ${expected_success}, Obtido: ${response_success}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-10-09T14:39:25.690996" elapsed="0.000292"/>
</kw>
<arg>${False}</arg>
<status status="PASS" start="2025-10-09T14:39:25.688787" elapsed="0.002585"/>
</kw>
<tag>CT001</tag>
<status status="PASS" start="2025-10-09T14:39:25.603585" elapsed="0.088190"/>
</test>
<doc>Testes para o endpoint /auth</doc>
<status status="PASS" start="2025-10-09T14:39:25.413308" elapsed="0.279445"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">CT001</stat>
</tag>
<suite>
<stat name="Auth Tests" id="s1" pass="1" fail="0" skip="0">Auth Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
